1. Form checking should be smarter if a parent feature is selected then it's
   child category must have a selection. Hard to implement for arbitrary depths
   of nesting.
2. Handle files of tweets larger than 1,500

Full production changes:
1. Switch to postgres
2. logging
3. testing
4. Add ability to have simultaneous projects
5. Ability to have project specific admins who can add project users and
   add coding schemes
5. Add ability to have the same coding schemes which can be set for multiple
   projects. Project admins should be able to see (but not edit) other coding
   schemes and import them in to their own project
6. Only admins should register new users
7. Only a project admin should be able to upload a corpus
8. Coding schemes should have arbitrary dependency complexity, multiple
   child categories per feature and so forth.
9. Complex dependencies needs better layout handling on the UI
9. re-write form validation in the index view
10. Mark private functions
11. Better handling for failed file uploads
12. send static Styling to css file
13. send static js to js file
14. With projects we can set which tweets to be automatically harvested (cron/daemon)
15. Switch to twitter API v1.1, oAuth change needed, complicated!
16. Query twitter api for user bios and format them nicely
17. Really there should be a twitter_user_bio table rather than holding that
    in the tweet table.
18. Make it less twitter centric, have support for other online text sources
    (social media, news sites etc...) or even just generic text
